// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/jkuri/abstruse/internal/pkg/config"
	"github.com/jkuri/abstruse/internal/pkg/log"
	"github.com/jkuri/abstruse/internal/worker"
	"github.com/jkuri/abstruse/internal/worker/etcd"
	"github.com/jkuri/abstruse/internal/worker/grpc"
	"github.com/jkuri/abstruse/internal/worker/options"
)

// Injectors from wire.go:

func CreateApp(cfg string) (*worker.App, error) {
	viper, err := config.NewConfig(cfg)
	if err != nil {
		return nil, err
	}
	optionsOptions, err := options.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logOptions, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.New(logOptions)
	if err != nil {
		return nil, err
	}
	app := etcd.NewApp(optionsOptions, logger)
	server, err := grpc.NewServer(optionsOptions, logger, app)
	if err != nil {
		return nil, err
	}
	workerApp := worker.NewApp(optionsOptions, logger, server, app)
	return workerApp, nil
}

// wire.go:

var providerSet = wire.NewSet(options.ProviderSet, log.ProviderSet, config.ProviderSet, grpc.ProviderSet, worker.ProviderSet, etcd.ProviderSet)
